apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: s3
  namespace: eientei
  labels:
    app: s3
spec:
  serviceName: s3
  replicas: 1
  selector:
    matchLabels:
      app: s3
  template:
    metadata:
      labels:
        app: s3
    spec:
      containers:
        - name: s3
          image: quay.io/minio/minio:latest
          command:
            - /bin/bash
            - -c
          args:
            - minio server /data --console-address ":9001"
          imagePullPolicy: IfNotPresent
          env:
            - name: "MINIO_ROOT_USER"
              value: "minio"
            - name: "MINIO_ROOT_PASSWORD"
              value: "12345678"
          volumeMounts:
            - mountPath: "/data"
              name: s3
          ports:
            - containerPort: 9001
              protocol: TCP
            - containerPort: 9000
              protocol: TCP
  volumeClaimTemplates:
    - metadata:
        name: s3
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: s3-console
  namespace: eientei
  labels:
    app: s3-console
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 9001
  selector:
    app: s3
---
apiVersion: v1
kind: Service
metadata:
  name: s3-api-external
  namespace: eientei
  labels:
    app: s3-api-external
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 9000
  selector:
    app: s3
---
apiVersion: v1
kind: Service
metadata:
  name: s3
  namespace: eientei
  labels:
    app: s3
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP
  selector:
    app: s3
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: s3-console
  namespace: eientei
spec:
  rules:
    - host: "s3-console.localhost"
      http:
        paths:
        - path: "/"
          pathType: Prefix
          backend:
            service:
              name: s3-console
              port:
                number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: s3
  namespace: eientei
spec:
  rules:
    - host: "s3.localhost"
      http:
        paths:
        - path: "/"
          pathType: Prefix
          backend:
            service:
              name: s3-api-external
              port:
                number: 80
